//
// shapes:
//    Draw random shapes - circles, rectangles, triangle or ellipses
//
CLS 
CYCLE 
  shape = RND (4)
  SWITCH (shape)
    CASE 0
      PROC doRectangle
    ENDCASE 
    CASE 1
      PROC doCircle
    ENDCASE 
    CASE 2
      PROC doTriangle
    ENDCASE 
    CASE 3
      PROC doEllipse
    ENDCASE 
  ENDSWITCH 
  UPDATE 
  IF INKEY <> -1 THEN BREAK 
REPEAT 
END 
//
DEF PROC doRectangle
LOCAL x, y, w, h, f
rgbColour (RND (256), RND (256), RND (256))
f = RND (255)
ENDIF 
x = RND (gWidth)
y = RND (gHeight)
w = RND (gWidth / 4)
h = RND (gHeight / 4)
RECT (x, y, w, h, f)
ENDPROC 
//
DEF PROC doTriangle
LOCAL x1, x2, x3, y1, y2, y3, f
rgbColour (RND (256), RND (256), RND (256))
f = RND (255)
ENDIF 
//
x1 = RND (gWidth)
x2 = RND (gWidth)
x3 = RND (gWidth)
y1 = RND (gHeight)
y2 = RND (gHeight)
y3 = RND (gHeight)
TRIANGLE (x1, y1, x2, y2, x3, y3, f)
ENDPROC 
//
DEF PROC doCircle
LOCAL x, y, r, f
rgbColour (RND (256), RND (256), RND (256))
f = RND (255)
ENDIF 
//
x = RND (gWidth)
y = RND (gHeight)
r = RND (gWidth / 4)
CIRCLE (x, y, r, f)
ENDPROC 
//
DEF PROC doEllipse
LOCAL cx, cy, rx, ry, f
rgbColour (RND (256), RND (256), RND (256))
f = RND (2)
cx = RND (gWidth)
cy = RND (gHeight)
rx = RND (gWidth / 4)
ry = RND (gHeight / 4)
ELLIPSE (cx, cy, rx, ry, f)
ENDPROC 
